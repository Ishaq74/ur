---
import MainLayout from '../layouts/MainLayout.astro';
import Card from '../components/molecules/Card.astro';
import Icon from '../components/atoms/Icon.astro';
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../i18n';
import { getCollection } from 'astro:content';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get all published trails
const allTrails = await getCollection('trails');
const trails = allTrails.filter((trail: any) => trail.data.published);
---

<MainLayout 
  title={`${t('header.trails')} - Salut Annecy`} 
  description="Découvrez les meilleurs sentiers de randonnée autour d'Annecy"
  lang={lang}
>
  <section class="page-header">
    <div class="container">
      <h1>{t('header.trails')}</h1>
      <p class="subtitle">Explorez les plus beaux sentiers autour d'Annecy</p>
    </div>
  </section>

  <section class="content-section">
    <div class="container">
      {trails.length > 0 ? (
        <div class="trails-grid">
          {trails.map((trail: any) => (
            <Card 
              href={getLocalizedPath(`/trail/${trail.data.id}`, lang)} 
              hoverable={true}
              class="trail-card"
            >
              <div class="trail-image">
                <img src={trail.data.imageUrl} alt={trail.data.name} />
                <div class="trail-difficulty" data-difficulty={trail.data.difficulty}>
                  {trail.data.difficulty}
                </div>
              </div>
              <div class="trail-content">
                <h3 class="trail-name">{trail.data.name}</h3>
                <p class="trail-excerpt">{trail.data.excerpt}</p>
                <div class="trail-stats">
                  <div class="trail-stat">
                    <Icon name="map-pin" size="sm" />
                    <span>{trail.data.distance}</span>
                  </div>
                  <div class="trail-stat">
                    <Icon name="clock" size="sm" />
                    <span>{trail.data.duration}</span>
                  </div>
                  {trail.data.elevation && (
                    <div class="trail-stat">
                      <Icon name="trending-up" size="sm" />
                      <span>{trail.data.elevation}</span>
                    </div>
                  )}
                </div>
              </div>
            </Card>
          ))}
        </div>
      ) : (
        <div class="empty-state">
          <Icon name="hiking" size="xl" />
          <h3>Aucun sentier trouvé</h3>
          <p>Revenez bientôt pour découvrir nos recommandations !</p>
        </div>
      )}
    </div>
  </section>
</MainLayout>

<style>
  .page-header {
    background: linear-gradient(135deg, var(--color-primary-100), var(--color-secondary-100));
    padding: var(--spacing-12) 0 var(--spacing-8);
    text-align: center;
  }

  .page-header h1 {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-3);
  }

  .subtitle {
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
  }

  .content-section {
    padding: var(--spacing-12) 0;
  }

  .trails-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-6);
  }

  .trail-card {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .trail-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    background-color: var(--color-surface-secondary);
  }

  .trail-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .trail-difficulty {
    position: absolute;
    top: var(--spacing-3);
    left: var(--spacing-3);
    padding: var(--spacing-2) var(--spacing-3);
    border-radius: var(--radius-base);
    font-weight: var(--font-weight-semibold);
    font-size: var(--font-size-sm);
    text-transform: capitalize;
    color: white;
  }

  .trail-difficulty[data-difficulty="facile"] {
    background-color: var(--color-success-600);
  }

  .trail-difficulty[data-difficulty="moyen"] {
    background-color: var(--color-warning-600);
  }

  .trail-difficulty[data-difficulty="difficile"] {
    background-color: var(--color-error-600);
  }

  .trail-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .trail-name {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-2);
  }

  .trail-excerpt {
    flex: 1;
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-3);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .trail-stats {
    display: flex;
    gap: var(--spacing-4);
    padding-top: var(--spacing-3);
    border-top: 1px solid var(--color-border);
  }

  .trail-stat {
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    color: var(--color-text-secondary);
    font-size: var(--font-size-sm);
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-6);
    color: var(--color-text-secondary);
  }

  .empty-state h3 {
    margin: var(--spacing-4) 0 var(--spacing-2);
  }

  @media (max-width: 768px) {
    .trails-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
