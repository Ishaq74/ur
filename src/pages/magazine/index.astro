---
import MainLayout from '../../layouts/MainLayout.astro';
import Card from '../../components/molecules/Card.astro';
import Icon from '../../components/atoms/Icon.astro';
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../../i18n';
import { getCollection } from 'astro:content';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get filters from URL
const categoryFilter = Astro.url.searchParams.get('cat');
const tagFilter = Astro.url.searchParams.get('tag');

// Get all published articles
const allArticles = await getCollection('articles');
const articleCategories = await getCollection('articleCategories');

// Filter articles
let articles = allArticles.filter((article: any) => article.data.published);

// Category filter
if (categoryFilter) {
  const category = articleCategories.find(c => c.data.slug === categoryFilter || c.data.id === categoryFilter);
  if (category) {
    articles = articles.filter((a: any) => a.data.categoryId === category.data.id || a.data.category === category.data.name);
  }
}

// Tag filter
if (tagFilter) {
  articles = articles.filter((a: any) => 
    a.data.tags && a.data.tags.some((tag: string) => 
      tag.toLowerCase().includes(tagFilter.toLowerCase())
    )
  );
}

// Get category name if filtering
let categoryName = t('header.magazine');
if (categoryFilter) {
  const category = articleCategories.find(c => c.data.slug === categoryFilter || c.data.id === categoryFilter);
  if (category) {
    categoryName = category.data.name;
  }
}

// Collect all unique tags for filter options
const allTags = new Set<string>();
allArticles.forEach((a: any) => {
  if (a.data.tags) {
    a.data.tags.forEach((tag: string) => allTags.add(tag));
  }
});
---

<MainLayout 
  title={`${categoryName} - Salut Annecy`} 
  description="Découvrez nos articles sur Annecy et ses environs"
  lang={lang}
>
  <section class="page-header">
    <div class="container">
      <h1>{categoryName}</h1>
      <p class="subtitle">Articles, guides et recommandations</p>
    </div>
  </section>

  <section class="content-section">
    <div class="container">
      <div class="content-layout">
        <!-- Sidebar Filters -->
        <aside class="filters-sidebar">
          <h2 class="sidebar-title">{t('filters.filter_by')}</h2>
          
          <!-- Category Filter -->
          <div class="filter-section">
            <h3 class="filter-title">{t('filters.category')}</h3>
            <div class="filter-options">
              <a 
                href={getLocalizedPath('/magazine', lang)} 
                class={`filter-option ${!categoryFilter ? 'active' : ''}`}
              >
                {t('filters.all')}
              </a>
              {articleCategories.sort((a, b) => (a.data.order || 0) - (b.data.order || 0)).map((category: any) => (
                <a 
                  href={getLocalizedPath(`/magazine?cat=${category.data.slug}`, lang)} 
                  class={`filter-option ${categoryFilter === category.data.slug || categoryFilter === category.data.id ? 'active' : ''}`}
                >
                  {category.data.name}
                </a>
              ))}
            </div>
          </div>

          <!-- Tag Filter -->
          {allTags.size > 0 && (
            <div class="filter-section">
              <h3 class="filter-title">{t('filters.tags')}</h3>
              <div class="filter-tags">
                {Array.from(allTags).sort().map(tag => (
                  <a 
                    href={getLocalizedPath(`/magazine?${categoryFilter ? `cat=${categoryFilter}&` : ''}tag=${tag}`, lang)} 
                    class={`tag-chip ${tagFilter === tag ? 'active' : ''}`}
                  >
                    {tag}
                  </a>
                ))}
              </div>
            </div>
          )}

          <!-- Clear Filters -->
          {(categoryFilter || tagFilter) && (
            <a href={getLocalizedPath('/magazine', lang)} class="clear-filters">
              {t('filters.clear_filters')}
            </a>
          )}
        </aside>

        <!-- Articles Grid -->
        <div class="main-content">
          <p class="results-count">{articles.length} article{articles.length > 1 ? 's' : ''}</p>
          
          {articles.length > 0 ? (
            <div class="articles-grid">
              {articles.map((article: any) => {
                const category = articleCategories.find(c => c.data.id === article.data.categoryId);
                return (
                  <Card 
                    href={getLocalizedPath(`/magazine/${article.data.id}`, lang)} 
                    hoverable={true}
                    class="article-card"
                  >
                    <div class="article-image">
                      <img src={article.data.imageUrl} alt={article.data.title} />
                    </div>
                    <div class="article-content">
                      <div class="article-header">
                        <span class="article-category">{category?.data.name || article.data.category}</span>
                        {article.data.readTime && (
                          <span class="article-read-time">{article.data.readTime}</span>
                        )}
                      </div>
                      <h3 class="article-title">{article.data.title}</h3>
                      <p class="article-excerpt">{article.data.excerpt}</p>
                      <div class="article-footer">
                        <span class="article-date">{new Date(article.data.date).toLocaleDateString('fr-FR', { day: 'numeric', month: 'long', year: 'numeric' })}</span>
                        {article.data.tags && article.data.tags.length > 0 && (
                          <div class="article-tags">
                            {article.data.tags.slice(0, 2).map((tag: string) => (
                              <span class="article-tag">{tag}</span>
                            ))}
                          </div>
                        )}
                      </div>
                    </div>
                  </Card>
                );
              })}
            </div>
          ) : (
            <div class="empty-state">
              <Icon name="book" size="xl" />
              <h3>Aucun article trouvé</h3>
              <p>Revenez bientôt pour découvrir nos derniers articles !</p>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<style>
  .page-header {
    background: linear-gradient(135deg, var(--color-primary-100), var(--color-secondary-100));
    padding: var(--spacing-12) 0 var(--spacing-8);
    text-align: center;
  }

  .page-header h1 {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-3);
  }

  .subtitle {
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
  }

  .content-section {
    padding: var(--spacing-12) 0;
  }

  .content-layout {
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: var(--spacing-8);
  }

  /* Sidebar Styles */
  .filters-sidebar {
    background-color: var(--color-surface-secondary);
    padding: var(--spacing-6);
    border-radius: var(--radius-lg);
    height: fit-content;
    position: sticky;
    top: calc(var(--spacing-20) + var(--spacing-4));
  }

  .sidebar-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    margin-bottom: var(--spacing-4);
    color: var(--color-text-primary);
  }

  .filter-section {
    margin-bottom: var(--spacing-6);
  }

  .filter-title {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: var(--spacing-3);
  }

  .filter-options {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-2);
  }

  .filter-option {
    padding: var(--spacing-2) var(--spacing-3);
    border-radius: var(--radius-base);
    text-decoration: none;
    color: var(--color-text-primary);
    transition: all var(--transition-fast);
    font-size: var(--font-size-sm);
  }

  .filter-option:hover {
    background-color: var(--color-surface);
    color: var(--color-primary-600);
  }

  .filter-option.active {
    background-color: var(--color-primary-100);
    color: var(--color-primary-700);
    font-weight: var(--font-weight-semibold);
  }

  .filter-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-2);
  }

  .tag-chip {
    padding: var(--spacing-1) var(--spacing-3);
    background-color: var(--color-surface);
    border-radius: var(--radius-full);
    text-decoration: none;
    color: var(--color-text-secondary);
    font-size: var(--font-size-sm);
    transition: all var(--transition-fast);
    border: 1px solid var(--color-border);
  }

  .tag-chip:hover {
    background-color: var(--color-primary-50);
    color: var(--color-primary-700);
    border-color: var(--color-primary-300);
  }

  .tag-chip.active {
    background-color: var(--color-primary-500);
    color: white;
    border-color: var(--color-primary-500);
  }

  .clear-filters {
    display: block;
    text-align: center;
    padding: var(--spacing-3);
    background-color: var(--color-surface);
    border-radius: var(--radius-base);
    text-decoration: none;
    color: var(--color-primary-600);
    font-weight: var(--font-weight-medium);
    font-size: var(--font-size-sm);
    transition: all var(--transition-fast);
    margin-top: var(--spacing-4);
  }

  .clear-filters:hover {
    background-color: var(--color-primary-50);
  }

  /* Main Content */
  .main-content {
    flex: 1;
  }

  .results-count {
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-4);
  }

  .articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-6);
  }

  .article-card {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .article-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    background-color: var(--color-surface-secondary);
  }

  .article-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .article-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .article-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-2);
  }

  .article-category {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary-600);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .article-read-time {
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  .article-title {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-2);
  }

  .article-excerpt {
    flex: 1;
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-3);
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .article-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-3);
    padding-top: var(--spacing-3);
    border-top: 1px solid var(--color-border);
  }

  .article-date {
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  .article-tags {
    display: flex;
    gap: var(--spacing-2);
  }

  .article-tag {
    font-size: var(--font-size-xs);
    padding: var(--spacing-1) var(--spacing-2);
    background-color: var(--color-surface-secondary);
    border-radius: var(--radius-sm);
    color: var(--color-text-secondary);
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-6);
    color: var(--color-text-secondary);
  }

  .empty-state h3 {
    margin: var(--spacing-4) 0 var(--spacing-2);
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .content-layout {
      grid-template-columns: 240px 1fr;
      gap: var(--spacing-6);
    }
  }

  @media (max-width: 768px) {
    .content-layout {
      grid-template-columns: 1fr;
    }

    .filters-sidebar {
      position: static;
      margin-bottom: var(--spacing-6);
    }

    .articles-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
