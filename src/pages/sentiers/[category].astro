---
import MainLayout from '../../layouts/MainLayout.astro';
import Card from '../../components/molecules/Card.astro';
import Icon from '../../components/atoms/Icon.astro';
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../../i18n';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const trailCategories = await getCollection('trailCategories');
  const allTrails = await getCollection('trails');
  
  return trailCategories.map(category => ({
    params: { category: category.data.slug },
    props: { 
      category,
      trails: allTrails.filter((trail: any) => 
        trail.data.difficulty === category.data.id && trail.data.published
      )
    },
  }));
}

const { category, trails } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<MainLayout 
  title={`Sentiers ${category.data.name} - Salut Annecy`} 
  description={category.data.description || `Découvrez nos sentiers de difficulté ${category.data.name}`}
  lang={lang}
>
  <section class="page-header">
    <div class="container">
      <nav class="breadcrumb">
        <a href={getLocalizedPath('/sentiers', lang)}>{t('header.trails')}</a>
        <span>/</span>
        <span>{category.data.name}</span>
      </nav>
      <h1>Sentiers {category.data.name}</h1>
      {category.data.description && (
        <p class="subtitle">{category.data.description}</p>
      )}
    </div>
  </section>

  <section class="content-section">
    <div class="container">
      {trails.length > 0 ? (
        <div class="trails-grid">
          {trails.map((trail: any) => (
            <Card 
              href={getLocalizedPath(`/trail/${trail.data.id}`, lang)} 
              hoverable={true}
              class="trail-card"
            >
              <div class="trail-image">
                <img src={trail.data.imageUrl} alt={trail.data.name} />
                <div class="trail-difficulty" data-difficulty={trail.data.difficulty}>
                  {trail.data.difficulty}
                </div>
              </div>
              <div class="trail-content">
                <h3 class="trail-name">{trail.data.name}</h3>
                <p class="trail-excerpt">{trail.data.excerpt}</p>
                <div class="trail-stats">
                  <div class="trail-stat">
                    <Icon name="map-pin" size="sm" />
                    <span>{trail.data.distance}</span>
                  </div>
                  <div class="trail-stat">
                    <Icon name="clock" size="sm" />
                    <span>{trail.data.duration}</span>
                  </div>
                  {trail.data.elevation && (
                    <div class="trail-stat">
                      <Icon name="trending-up" size="sm" />
                      <span>{trail.data.elevation}</span>
                    </div>
                  )}
                </div>
              </div>
            </Card>
          ))}
        </div>
      ) : (
        <div class="empty-state">
          <Icon name="hiking" size="xl" />
          <h3>Aucun sentier dans cette catégorie</h3>
          <p>Revenez bientôt pour découvrir nos recommandations !</p>
          <a href={getLocalizedPath('/sentiers', lang)} class="back-link">
            Retour aux sentiers
          </a>
        </div>
      )}
    </div>
  </section>
</MainLayout>

<style>
  .page-header {
    background: linear-gradient(135deg, var(--color-primary-100), var(--color-secondary-100));
    padding: var(--spacing-12) 0 var(--spacing-8);
    text-align: center;
  }

  .breadcrumb {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--spacing-2);
    font-size: var(--font-size-sm);
    margin-bottom: var(--spacing-4);
    color: var(--color-text-secondary);
  }

  .breadcrumb a {
    color: var(--color-primary-600);
    text-decoration: none;
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .page-header h1 {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-3);
  }

  .subtitle {
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
  }

  .content-section {
    padding: var(--spacing-12) 0;
  }

  .trails-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-6);
  }

  .trail-card {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .trail-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    background-color: var(--color-surface-secondary);
  }

  .trail-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .trail-difficulty {
    position: absolute;
    top: var(--spacing-3);
    left: var(--spacing-3);
    padding: var(--spacing-2) var(--spacing-3);
    border-radius: var(--radius-base);
    font-weight: var(--font-weight-semibold);
    font-size: var(--font-size-sm);
    text-transform: capitalize;
    color: white;
  }

  .trail-difficulty[data-difficulty="facile"] {
    background-color: var(--color-success-600);
  }

  .trail-difficulty[data-difficulty="moyen"] {
    background-color: var(--color-warning-600);
  }

  .trail-difficulty[data-difficulty="difficile"] {
    background-color: var(--color-error-600);
  }

  .trail-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .trail-name {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-2);
  }

  .trail-excerpt {
    flex: 1;
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-3);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .trail-stats {
    display: flex;
    gap: var(--spacing-4);
    padding-top: var(--spacing-3);
    border-top: 1px solid var(--color-border);
  }

  .trail-stat {
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    color: var(--color-text-secondary);
    font-size: var(--font-size-sm);
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-6);
    color: var(--color-text-secondary);
  }

  .empty-state h3 {
    margin: var(--spacing-4) 0 var(--spacing-2);
  }

  .back-link {
    display: inline-block;
    margin-top: var(--spacing-4);
    padding: var(--spacing-3) var(--spacing-6);
    background-color: var(--color-primary-500);
    color: white;
    text-decoration: none;
    border-radius: var(--radius-base);
    transition: all var(--transition-fast);
  }

  .back-link:hover {
    background-color: var(--color-primary-600);
  }

  @media (max-width: 768px) {
    .trails-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
