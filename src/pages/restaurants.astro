---
import MainLayout from '../layouts/MainLayout.astro';
import Card from '../components/molecules/Card.astro';
import Icon from '../components/atoms/Icon.astro';
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../i18n';
import { getCollection } from 'astro:content';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get all published places in the "restauration" category
const allPlaces = await getCollection('places');
const restaurants = allPlaces.filter(
  (place) => place.data.mainCategory === 'restauration' && place.data.published
);
---

<MainLayout 
  title={`${t('header.eat')} - Salut Annecy`} 
  description="Découvrez les meilleurs restaurants d'Annecy et ses environs"
  lang={lang}
>
  <section class="page-header">
    <div class="container">
      <h1>{t('header.eat')}</h1>
      <p class="subtitle">Découvrez les meilleures tables d'Annecy et ses environs</p>
    </div>
  </section>

  <section class="content-section">
    <div class="container">
      {restaurants.length > 0 ? (
        <div class="places-grid">
          {restaurants.map((restaurant) => (
            <Card 
              href={getLocalizedPath(`/place/${restaurant.data.id}`, lang)} 
              hoverable={true}
              class="place-card"
            >
              <div class="place-image">
                <img src={restaurant.data.imageUrl} alt={restaurant.data.name} />
              </div>
              <div class="place-content">
                <div class="place-header">
                  <span class="place-category">{restaurant.data.category}</span>
                  {restaurant.data.rating && (
                    <div class="place-rating">
                      <Icon name="star" size="sm" />
                      <span>{restaurant.data.rating.toFixed(1)}</span>
                    </div>
                  )}
                </div>
                <h3 class="place-name">{restaurant.data.name}</h3>
                <p class="place-description">{restaurant.data.description}</p>
                {restaurant.data.priceRange && (
                  <div class="place-meta">
                    <span class="price-range">{restaurant.data.priceRange}</span>
                    {restaurant.data.attributes.length > 0 && (
                      <span class="separator">•</span>
                    )}
                    {restaurant.data.attributes.slice(0, 2).map((attr) => (
                      <span class="attribute">{attr}</span>
                    ))}
                  </div>
                )}
              </div>
            </Card>
          ))}
        </div>
      ) : (
        <div class="empty-state">
          <Icon name="map-pin" size="lg" />
          <p>Aucun restaurant disponible pour le moment.</p>
        </div>
      )}
    </div>
  </section>
</MainLayout>

<style>
  .page-header {
    background: linear-gradient(135deg, var(--color-primary-500), var(--color-secondary-500));
    color: white;
    padding: var(--spacing-12) 0 var(--spacing-8);
    text-align: center;
  }

  .page-header h1 {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-3);
    color: white;
  }

  .subtitle {
    font-size: var(--font-size-xl);
    opacity: 0.95;
    margin: 0;
    color: white;
  }

  .content-section {
    padding: var(--spacing-12) 0;
  }

  .places-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-6);
  }

  .place-card {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .place-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: var(--radius-lg);
    margin-bottom: var(--spacing-4);
    background: linear-gradient(135deg, var(--color-primary-100), var(--color-secondary-100));
  }

  .place-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .place-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .place-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-2);
  }

  .place-category {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary-600);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .place-rating {
    display: flex;
    align-items: center;
    gap: var(--spacing-1);
    color: var(--color-warning-500);
    font-weight: var(--font-weight-semibold);
  }

  .place-name {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-2);
  }

  .place-description {
    flex: 1;
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-3);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .place-meta {
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    font-size: var(--font-size-sm);
    color: var(--color-text-tertiary);
    flex-wrap: wrap;
  }

  .price-range {
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-secondary);
  }

  .separator {
    color: var(--color-border);
  }

  .attribute {
    padding: var(--spacing-1) var(--spacing-2);
    background-color: var(--color-surface-secondary);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-16) var(--spacing-4);
    color: var(--color-text-tertiary);
  }

  .empty-state svg {
    margin: 0 auto var(--spacing-4);
    opacity: 0.5;
  }

  @media (max-width: 768px) {
    .page-header h1 {
      font-size: var(--font-size-3xl);
    }

    .subtitle {
      font-size: var(--font-size-lg);
    }

    .places-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
