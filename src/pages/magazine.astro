---
import MainLayout from '../layouts/MainLayout.astro';
import Card from '../components/molecules/Card.astro';
import Icon from '../components/atoms/Icon.astro';
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../i18n';
import { getCollection } from 'astro:content';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get all published articles
const allArticles = await getCollection('articles');
const articles = allArticles.filter((article: any) => article.data.published);
---

<MainLayout 
  title={`${t('header.magazine')} - Salut Annecy`} 
  description="Découvrez nos articles sur Annecy et ses environs"
  lang={lang}
>
  <section class="page-header">
    <div class="container">
      <h1>{t('header.magazine')}</h1>
      <p class="subtitle">Articles, guides et recommandations</p>
    </div>
  </section>

  <section class="content-section">
    <div class="container">
      {articles.length > 0 ? (
        <div class="articles-grid">
          {articles.map((article: any) => (
            <Card 
              href={getLocalizedPath(`/magazine/${article.data.id}`, lang)} 
              hoverable={true}
              class="article-card"
            >
              <div class="article-image">
                <img src={article.data.imageUrl} alt={article.data.title} />
              </div>
              <div class="article-content">
                <div class="article-header">
                  <span class="article-category">{article.data.category}</span>
                  {article.data.readTime && (
                    <span class="article-read-time">{article.data.readTime}</span>
                  )}
                </div>
                <h3 class="article-title">{article.data.title}</h3>
                <p class="article-excerpt">{article.data.excerpt}</p>
                <div class="article-footer">
                  <span class="article-date">{new Date(article.data.date).toLocaleDateString('fr-FR', { day: 'numeric', month: 'long', year: 'numeric' })}</span>
                  {article.data.tags && article.data.tags.length > 0 && (
                    <div class="article-tags">
                      {article.data.tags.slice(0, 2).map((tag: string) => (
                        <span class="article-tag">{tag}</span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </Card>
          ))}
        </div>
      ) : (
        <div class="empty-state">
          <Icon name="book" size="xl" />
          <h3>Aucun article trouvé</h3>
          <p>Revenez bientôt pour découvrir nos derniers articles !</p>
        </div>
      )}
    </div>
  </section>
</MainLayout>

<style>
  .page-header {
    background: linear-gradient(135deg, var(--color-primary-100), var(--color-secondary-100));
    padding: var(--spacing-12) 0 var(--spacing-8);
    text-align: center;
  }

  .page-header h1 {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-3);
  }

  .subtitle {
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
  }

  .content-section {
    padding: var(--spacing-12) 0;
  }

  .articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-6);
  }

  .article-card {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .article-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    background-color: var(--color-surface-secondary);
  }

  .article-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .article-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .article-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-2);
  }

  .article-category {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary-600);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .article-read-time {
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  .article-title {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-2);
  }

  .article-excerpt {
    flex: 1;
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-3);
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .article-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-3);
    padding-top: var(--spacing-3);
    border-top: 1px solid var(--color-border);
  }

  .article-date {
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
  }

  .article-tags {
    display: flex;
    gap: var(--spacing-2);
  }

  .article-tag {
    font-size: var(--font-size-xs);
    padding: var(--spacing-1) var(--spacing-2);
    background-color: var(--color-surface-secondary);
    border-radius: var(--radius-sm);
    color: var(--color-text-secondary);
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-6);
    color: var(--color-text-secondary);
  }

  .empty-state h3 {
    margin: var(--spacing-4) 0 var(--spacing-2);
  }

  @media (max-width: 768px) {
    .articles-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
