---
import MainLayout from '../layouts/MainLayout.astro';
import Card from '../components/molecules/Card.astro';
import Icon from '../components/atoms/Icon.astro';
import { useTranslations, getLangFromUrl, getLocalizedPath } from '../i18n';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const allPlaceCategories = await getCollection('placeCategories');
  const allPlaces = await getCollection('places');
  
  // Only use French categories for routing (default language)
  const frenchCategories = allPlaceCategories.filter((cat) => cat.data.lang === 'fr');
  
  return frenchCategories.map(category => ({
    params: { category: category.data.slug },
    props: { 
      category,
      places: allPlaces.filter((place) => 
        place.data.mainCategory.id === category.data.id && place.data.published
      )
    },
  }));
}

type Props = {
  category: CollectionEntry<'placeCategories'>;
  places: CollectionEntry<'places'>[];
};

const { category, places }: Props = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<MainLayout 
  title={`${category.data.name} - Salut Annecy`} 
  description={category.data.description}
  lang={lang}
>
  <section class="page-header">
    <div class="container">
      <h1>{category.data.name}</h1>
      <p class="subtitle">{category.data.description}</p>
    </div>
  </section>

  <section class="content-section">
    <div class="container">
      {places.length > 0 ? (
        <div class="places-grid">
          {places.map((place: any) => (
            <Card 
              href={getLocalizedPath(`/place/${place.data.id}`, lang)} 
              hoverable={true}
              class="place-card"
            >
              <div class="place-image">
                <img src={place.data.imageUrl} alt={place.data.name} />
              </div>
              <div class="place-content">
                <div class="place-header">
                  <span class="place-category">{place.data.category}</span>
                  {place.data.rating && (
                    <div class="place-rating">
                      <Icon name="star" size="sm" />
                      <span>{place.data.rating.toFixed(1)}</span>
                    </div>
                  )}
                </div>
                <h3 class="place-name">{place.data.name}</h3>
                <p class="place-description">{place.data.description}</p>
                <div class="place-footer">
                  {place.data.address && (
                    <div class="place-info">
                      <Icon name="map-pin" size="sm" />
                      <span>{place.data.address}</span>
                    </div>
                  )}
                  {place.data.priceRange && (
                    <span class="place-price">{place.data.priceRange}</span>
                  )}
                </div>
              </div>
            </Card>
          ))}
        </div>
      ) : (
        <div class="empty-state">
          <Icon name={category.data.icon} size="xl" />
          <h3>Aucun résultat trouvé</h3>
          <p>Revenez bientôt pour découvrir nos recommandations !</p>
        </div>
      )}
    </div>
  </section>
</MainLayout>

<style>
  .page-header {
    background: linear-gradient(135deg, var(--color-primary-100), var(--color-secondary-100));
    padding: var(--spacing-12) 0 var(--spacing-8);
    text-align: center;
  }

  .page-header h1 {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-3);
  }

  .subtitle {
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
  }

  .content-section {
    padding: var(--spacing-12) 0;
  }

  .places-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-6);
  }

  .place-card {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .place-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    background-color: var(--color-surface-secondary);
  }

  .place-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .place-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .place-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-2);
  }

  .place-category {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary-600);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .place-rating {
    display: flex;
    align-items: center;
    gap: var(--spacing-1);
    color: var(--color-warning-500);
    font-weight: var(--font-weight-semibold);
  }

  .place-name {
    font-size: var(--font-size-xl);
    margin-bottom: var(--spacing-2);
  }

  .place-description {
    flex: 1;
    color: var(--color-text-secondary);
    margin-bottom: var(--spacing-3);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .place-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-3);
    padding-top: var(--spacing-3);
    border-top: 1px solid var(--color-border);
  }

  .place-info {
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    color: var(--color-text-secondary);
    font-size: var(--font-size-sm);
  }

  .place-price {
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary-600);
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-6);
    color: var(--color-text-secondary);
  }

  .empty-state h3 {
    margin: var(--spacing-4) 0 var(--spacing-2);
  }

  @media (max-width: 768px) {
    .places-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
